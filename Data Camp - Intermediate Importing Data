#################################### Course 1: Importing data from the Internet ####################################
URL 

the urllib package -> url library
urlopen() - accepts URLs instead of file names

from urllib import urlretrieve
url = 'http://xxxxxx/xxx.csv'
urlretrieve(url,'xxxx.csv')---> urlretrieve : performs a GET request

----------------------------------
# Import package
from urllib.request import urlretrieve

# Import pandas
import pandas as pd

# Assign url of file: url
url = 'https://s3.amazonaws.com/assets.datacamp.com/production/course_1606/datasets/winequality-red.csv'

# Save file locally
urlretrieve(url,'winequality-red.csv')

# Read file into a DataFrame and print its head
df = pd.read_csv('winequality-red.csv', sep=';')
print(df.head())

----------------------------------
# Import packages
import matplotlib.pyplot as plt
import pandas as pd

# Assign url of file: url
url = 'https://s3.amazonaws.com/assets.datacamp.com/production/course_1606/datasets/winequality-red.csv'

# Read file into a DataFrame: df
df = pd.read_csv(url, sep=';')

# Print the head of the DataFrame
print(df.head())

# Plot first column of df
pd.DataFrame.hist(df.ix[:, 0:1])
plt.xlabel('fixed acidity (g(tartaric acid)/dm$^3$)')
plt.ylabel('count')
plt.show()



# Import package
import pandas as pd

# Assign url of file: url
url = 'http://s3.amazonaws.com/assets.datacamp.com/course/importing_data_into_r/latitude.xls'

# Read in all sheets of Excel file: xls
xls = pd.read_excel(url,sheet_name=None) --> Read the file in url into a dictionary xls using pd.read_excel()

# Print the sheetnames to the shell
print(xls.keys()) --> Print the names of the sheets in the Excel spreadsheet; these will be the keys of the dictionary xls

# Print the head of the first sheet (using its name, NOT its index)
print(xls['1700'].head()) --> Print the head of the first sheet using the sheet name, not the index of the sheet! The sheet name is '1700'


------------------------------------------------------------------------------------------------------
HTTP requests to import files from the web
( HyperText Transfer Protocol )

urlretrieve : performs a GET request

HTML
( HyperText Markup Language )



from urllib.request import urlopen,Request
url ='https:''www.xxxx.org/"
request = Request(url)
response = urlopen(request)
html=response.read()
response.close()

--> Get requests using requests
import requests
url = 'https://www.xxxx.org/"
r = requests.get(url)
text = r.text


------------------------------------------------------------------------------------------------------
Scraping the web in Python

Use the method find_all() to find all hyperlinks


# Import packages
import requests
from bs4 import BeautifulSoup

# Specify url: url
url = 'https://www.python.org/~guido/'

# Package the request, send the request and catch the response: r
r = requests.get(url)

# Extracts the response as html: html_doc
html_doc = r.text ---> Use the text attribute of the object r to return the HTML of the webpage as a string; 

# Create a BeautifulSoup object from the HTML: soup
soup = BeautifulSoup(html_doc)

# Prettify the BeautifulSoup object: pretty_soup
pretty_soup=soup.prettify() 

# Get the title of Guido's webpage: guido_title
guido_title = soup.title --> No () !!! --> xxx.title

# Print the title of Guido's webpage to the shell
print(guido_title)

# Get Guido's text: guido_text
guido_text = soup.get_text() --> get text: xxx.get_text() with ()

# Print Guido's text to the shell
print(guido_text)

# Find all 'a' tags (which define hyperlinks): a_tags
a_tags = soup.find_all('a')

# Print the URLs to the shell
for link in a_tags:
    print(link.get('href'))
--- The variable a_tags is a results set: your job now is to enumerate over it, using a for loop and to print the actual URLs of the hyperlinks; 
----- to do this, for every element link in a_tags, you want to print() link.get('href')

#################################### Course 2: Interacting with APIs to import data from the web ####################################
APIs
Application Programmin Interface


#################################### Course 3: Diving deep into the Twitter API ####################################
