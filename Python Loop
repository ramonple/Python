Output string in reverse order：
str[::-1]

------------------------------------------------------------------------------------------------------------
交错数列求前n项和
描述：输入一个正整数 n，计算并输出2/1, 3/2, 5/3, 8/5, 13/8, …的前n项之和

n=int(input())
fz = 2
fm = 1
num=0
for i in range(1,n+1):
    num+=fz/fm
    (fm,fz) = (fz,fm)
    fz=fz+fm
print(num)

------------------------------------------------------------------------------------------------------------

特殊数列求和
描述：用户输入一个小于10的正整数，求1 + 12 + 123 + 1234 + …… 的前n项的和，当输入大于或等于10时，输出“data error!”

n=int(input())
num = 0
t = 0
if n>=10:
    print('data error!')
else:
    for i in range(1,n+1):
        t = t*10 +i
        num += t
    print(num)
    
 ------------------------------------------------------------------------------------------------------------
 
 四位玫瑰数
描述：四位玫瑰数是4位数的自幂数。自幂数是指一个 n 位数，它的每个位上的数字的 n 次幂之和等于它本身。‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‫‬
例如：当n为3时，有1^3 + 5^3 + 3^3 = 153，153即是n为3时的一个自幂数，3位数的自幂数被称为水仙花数。‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‫‬
请输出所有4位数的四位玫瑰数，按照从小到大顺序，每个数字一行。

for i in range(1000,10000):
	if int(i/1000)**4+int(i%1000/100)**4+int(i%1000%100/10)**4+int(i%1000%100%10)**4 == i:
		print(i)

------------------------------------------------------------------------------------------------------------
正负交错数列前n项和
描述
1-1/2+2/3-3/5+4/8-5/13+...的前n项和，n由用户输入（n>0），结果用str.format()方法保留小数点后6位数字输出。

# 分析：
# 分子规律为：1，1，2，3，4，5，...，除首个数字外是自然数
# 分母规律为：1，2，3，5，8，13...，除首个数字外，后面每个数是前面两个数的加和
# 符号规律：正负交替
# 项数：1，2，3，...n共n项
# previous, current = 1, 1
#    1          2        1         1    +    1
# previous, current = current, previous + current

# previous, current = 1, 2
#    2          3        2         1    +    2
# previous, current = current, previous + current

# previous, current = 2, 3
#    3          5        3         2    +    3
# previous, current = current, previous + current
# previous, current = 3, 5
# ......

n = int(input())
result = 1                        # 首项的值，作为累加初值
sign = -1                         # 符号，第二项是负值，
previous, current = 1, 1          # 分母数字的初值，从第二项开始符合这个规律
for i in range(1, n):             # 从1到n-1遍历n-1次
	previous, current = current, previous + current  # 下一个数值是前面两个数的加和
	result = result + (sign * i) * previous / current             # 注意分子是 i
	sign = -sign                                     # 改变正负号
print('{:.6f}'.format(result))


 ------------------------------------------------------------------------------------------------------------
 
求数列前n项的平方和

n = int(input())
sum = 0
for i in range(1,n+1):
    sum = sum + i * i
print(sum)

------------------------------------------------------------------------------------------------------------
输出0-9的数字
n=int(input())

for i in range(n):
    print(i,end=' ')
    
------------------------------------------------------------------------------------------------------------
2的n次方

n = eval(input())
print(int(2**n))

n = eval(input())
print(pow(2,n))   #pow(x,y[,z])同x**y%z，常省略z,用于计算x的y次方


------------------------------------------------------------------------------------------------------------

十进制整数转二进制
描述
十进制整数转二进制的方法是：除以2，取出余数，商继续除以2，直到得到0为止，将取出的余数逆序即可得到对应的二进制数的各位。
例如：22转二进制的计算过程：
22 / 2 11  余0
11/2    5   余 1
5 /2     2   余 1
2 /2     1   余 0
1 /2     0   余 1
得到22的二进制是10110

num = int(input())
s=''
if num == 0:
	s = '0'
while num != 0:
    s = s + str(num % 2)  # 将num对2取余的结果转字符串拼接到s
    num = num // 2
print(s[::-1])     # 逆序输出字符串                 
# 逆序输出字符串


------------------------------------------------------------------------------------------------------------
分数序列求和
描述
有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...求出这个数列的前n项之和,n由用户输入。

n = int(input())

my_sum = 0
current = 2
previous = 1

for i in range(1,n+1):
    my_sum = my_sum + current / previous
    previous, current = current, previous+current
print(my_sum)


------------------------------------------------------------------------------------------------------------
百钱买百鸡A
描述
我国古代数学家张丘建在《算经》一书中提出的数学问题：鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱一。百钱买百鸡，如果要求鸡翁、鸡母、鸡雏都不为零，问鸡翁、鸡母、鸡雏各几何？‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬

输入格式
该题目没有输入

for cock in range(1, 101):                 # 公鸡数量不为0且小于或等于100
    for hen in range(1, 101):              # 母鸡数量不为0且小于或等于100
        for chicken in range(1, 101):   # 小鸡数量大于0小于等于100且是3的倍数
            if chicken % 3 == 0:
                if cock + hen + chicken == 100 and 5 * cock + 3 * hen + chicken // 3 == 100:
                    print(cock, hen, chicken)  # 遇到满足条件的数字组合就输出



------------------------------------------------------------------------------------------------------------
计算阶乘
描述‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬

用户输入一个非负整数 n，计算并输出其阶乘。‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬

n!=1×2×3×...×n.

import math

n = int(input())
fact = math.factorial(n)
print(fact)



fact = 1
n = int(input())
for i in range(1,n + 1):
    fact = fact * i
print(fact)

------------------------------------------------------------------------------------------------------------
阶乘求和
描述
输入一个正整数n，计算 1!+2!+3!+...+n! 的和并输出。


def sum_factorial(n):
    total, t = 1, 1
    for i in range(2, n + 1):
        t = t * i
        total = total + t
    return total


n = int(input())
print(sum_factorial(n))


------------------------------------------------------------------------------------------------------------
奇数数列求和
描述
输入一个正整数 n，求数列1，3，5，……，（2n-1）的前n项的和。

-- method 1:
n = int(input())
print(sum(range(1,2*n,2))) 

-- method 2:

n = int(input())
sum = 0
for i in range(1,n + 1):
    sum = sum + (2 * i - 1)
print(sum)

------------------------------------------------------------------------------------------------------------
统计学生平均成绩与及格人数
描述 
编写程序，计算学生们的平均成绩，并统计及格（成绩不低于60分）的人数。题目保证输入与输出均在整型范围内。
 
score = list(map(int, input().split()))  # 通过map()和list()函数把用户输入转化成int列表
average = sum(score) / len(score)  # 用总和除以数量得到平均分
count = len(list(x for x in score if x >= 60))  # 通过列表推导式得到大于60分的列表然后用len()函数得到数量
print("average = {}".format(average))
print("count = {}".format(count))

>>>>>>>
Let's break it down:

input() gets user input and returns a string, e.g. "1 2 3 4 5"

input().split() splits that input on whitespaces, e.g. ["1", "2", "3", ...]

int() converts a string to a integer, e.g. "1" -> 1

map(fn, sequence) applies the function fn to each element in the sequence, e.g. fn(sequence[0]), fn(sequence[1]), ...

map(int, input().split()) applies int to each string element in the input, e.g. ["1", "2", "3", ...] -> int("1"), int("2"), ...

list() turns any iterator/generator to a list, e.g. int("1"), int("2"), ... => [1, 2, 3, ...]

------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------
