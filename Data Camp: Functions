
##################################### Course 1: Best Practices #####################################
Docstrings
-- A Python docstring is a string used to document a Python module, class, function or method, 
so programmers can understand what it does without having to read the details of the implementation. 

# define a function to calculate the letter

def count_letter(content, letter):
  """Count the number of times `letter` appears in `content`.
  # Add a Google-style arguments section
  Args:
    content (str): The string to search.
    letter (str): The letter to search for
    
  # Add a returns section
  Returns:
    int
    
  # Add a section detailing what errors might be raised
  Raises:
    ValueError: If `letter` is not a one-character string
  """
  if (not isinstance(letter, str)) or len(letter) != 1:
    raise ValueError('`letter` must be a single character string.')
    return len([char for char in content if char == letter])


Retrieving docstrings

1. # Begin by getting the docstring for the function count_letter(). Use an attribute of the count_letter() function.
# Get the "count_letter" docstring by using an attribute of the function
docstring = count_letter.__doc__

border = '#' * 28
print('{}\n{}\n{}'.format(border, docstring, border))

2. # Now use a function from the inspect module to get a better-formatted version of count_letter()'s docstring.
import inspect
# Inspect the count_letter() function to get its docstring
docstring = inspect.getdoc(count_letter)

border = '#' * 28
print('{}\n{}\n{}'.format(border, docstring, border))


3. # Now create a build_tooltip() function that can extract the docstring from any function that we pass to it.
import inspect

def build_tooltip(function):
  """Create a tooltip for any function that shows the
  function's docstring.

  Args:
    function (callable): The function we want a tooltip for.

  Returns:
    str
  """
  # Get the docstring for the "function" argument by using inspect
  docstring = inspect.getdoc(function)
  border = '#' * 28
  return '{}\n{}\n{}'.format(border, docstring, border)

print(build_tooltip(count_letter))
print(build_tooltip(range))
print(build_tooltip(print))

numpy.fywdkxa() is actually numpy.histogram() in disguise




DRY and "Do One Thing"
DRY Don't Repeat Yourself


##################################### Course 2: Context Managers #####################################


##################################### Course 3: Decorators #####################################


##################################### Course 4: More on Decorators #####################################
