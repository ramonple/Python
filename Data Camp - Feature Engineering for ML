########################################## Course 1: Creating Features ########################################## 

# select specific data types
df.select_dtypes(include=['int'])



# Import pandas
import pandas as pd

# Import so_survey_csv into so_survey_df
so_survey_df = pd.read_csv(so_survey_csv)

# Print the first five rows of the DataFrame
print(so_survey_df.head())

# Print the data type of each column
print(so_survey_df.dtypes)


# Create subset of only the numeric columns
so_numeric_df = so_survey_df.select_dtypes(include=['int','float'])

# Print the column names contained in so_survey_df_num
print(so_numeric_df.columns)




----- Dealing with categorical features

one hot vs dummies
one hot encoding: explainable features
dummy encoding: necessary information without duplication


Limiting your columns : avoding too many columns for dummy variables

counts=df['xx'].value_counts()
mask = df['xx'].isin(counts[counts < 5].index)
df['xx'][mask] = 'other'


# Convert the Country column to a one hot encoded Data Frame
one_hot_encoded = pd.get_dummies(so_survey_df, columns=['Country'], prefix='OH')

# Print the columns names
print(one_hot_encoded.columns)


# Create dummy variables for the Country column
dummy = pd.get_dummies(so_survey_df, columns=['Country'], drop_first=True, prefix='DM')

# Print the columns names
print(dummy.columns)








##########################################  Course 2:  Dealing with Messy Data ########################################## 




##########################################  Course 3: Conforming to Statistical Assumptions ########################################## 





########################################## Course 4: Dealing with Text Data ########################################## 
